definitions:
  github_com_lgulliver_lodestone_pkg_types.APIResponse:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
  github_com_lgulliver_lodestone_pkg_types.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  github_com_lgulliver_lodestone_pkg_types.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /admin/registries:
    get:
      description: Retrieve configuration settings for all supported registry formats
      produces:
      - application/json
      responses:
        "200":
          description: Registry settings retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
            - properties:
                data:
                  items:
                    type: object
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "403":
          description: Admin privileges required
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "500":
          description: Failed to retrieve registry settings
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
      security:
      - BearerAuth: []
      summary: Get all registry settings
      tags:
      - Admin
  /admin/registries/{registry}:
    get:
      description: Retrieve configuration settings for a specific registry format
      parameters:
      - description: Registry name (e.g., npm, nuget, maven)
        in: path
        name: registry
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Registry setting retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "403":
          description: Admin privileges required
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "404":
          description: Registry not found
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
      security:
      - BearerAuth: []
      summary: Get specific registry setting
      tags:
      - Admin
  /api/v1/nuget/symbols/{id}/{version}/{filename}:
    get:
      description: Download a NuGet symbol package (.snupkg file) containing debugging
        symbols
      parameters:
      - description: Package ID
        in: path
        name: id
        required: true
        type: string
      - description: Package version
        in: path
        name: version
        required: true
        type: string
      - description: Symbol package filename (typically {id}.{version}.snupkg)
        in: path
        name: filename
        required: true
        type: string
      produces:
      - application/zip
      responses:
        "200":
          description: NuGet symbol package file (.snupkg)
          schema:
            type: file
        "400":
          description: Bad request - not a symbol package file
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "404":
          description: Symbol package not found
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
      security:
      - BearerAuth: []
      summary: Download NuGet symbol package
      tags:
      - NuGet
  /api/v1/nuget/v2/package:
    put:
      consumes:
      - multipart/form-data
      - application/octet-stream
      description: Upload a new NuGet package (.nupkg file) to the registry
      parameters:
      - description: NuGet package file (.nupkg) for multipart uploads
        in: formData
        name: package
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Package uploaded successfully
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "400":
          description: Bad request - invalid package format
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
      security:
      - BearerAuth: []
      summary: Upload NuGet package
      tags:
      - NuGet
  /api/v1/nuget/v2/package/{id}/{version}:
    delete:
      description: Delete a specific version of a NuGet package from the registry
      parameters:
      - description: Package ID
        in: path
        name: id
        required: true
        type: string
      - description: Package version
        in: path
        name: version
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Package deleted successfully
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "400":
          description: Bad request - package ID and version required
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "403":
          description: Forbidden - insufficient permissions
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "404":
          description: Package not found
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
      security:
      - BearerAuth: []
      summary: Delete NuGet package
      tags:
      - NuGet
  /api/v1/nuget/v2/symbolpackage:
    put:
      consumes:
      - multipart/form-data
      - application/octet-stream
      description: Upload a NuGet symbol package (.snupkg file) containing debugging
        symbols
      parameters:
      - description: NuGet symbol package file (.snupkg) for multipart uploads
        in: formData
        name: package
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Symbol package uploaded successfully
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "400":
          description: Bad request - invalid symbol package format
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
      security:
      - BearerAuth: []
      summary: Upload NuGet symbol package
      tags:
      - NuGet
  /api/v1/nuget/v3-flatcontainer/{id}/{version}/{filename}:
    get:
      description: Download a specific version of a NuGet package (.nupkg file)
      parameters:
      - description: Package ID
        in: path
        name: id
        required: true
        type: string
      - description: Package version
        in: path
        name: version
        required: true
        type: string
      - description: Package filename (typically {id}.{version}.nupkg)
        in: path
        name: filename
        required: true
        type: string
      produces:
      - application/zip
      responses:
        "200":
          description: NuGet package file (.nupkg)
          schema:
            type: file
        "400":
          description: Bad request - missing required parameters
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "404":
          description: Package not found
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
      security:
      - BearerAuth: []
      summary: Download NuGet package
      tags:
      - NuGet
  /api/v1/nuget/v3-flatcontainer/{id}/index.json:
    get:
      description: Get list of available versions for a NuGet package
      parameters:
      - description: Package ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of package versions
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - package ID required
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "404":
          description: Package not found
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
      summary: Get package versions
      tags:
      - NuGet
  /api/v1/nuget/v3/index.json:
    get:
      description: Get NuGet v3 service index with API endpoints and capabilities
      produces:
      - application/json
      responses:
        "200":
          description: NuGet service index with resource endpoints
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
      summary: Get NuGet service index
      tags:
      - NuGet
  /api/v1/nuget/v3/registration/{id}/index.json:
    get:
      description: Get detailed metadata and registration information for a NuGet
        package
      parameters:
      - description: Package ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Package registration with metadata and version catalog
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - package ID required
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "404":
          description: Package not found
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
      summary: Get package metadata
      tags:
      - NuGet
  /api/v1/nuget/v3/search:
    get:
      description: Search for NuGet packages in the registry with optional filtering
      parameters:
      - description: Search query (package name or keywords)
        in: query
        name: q
        type: string
      - description: 'Number of results to skip (default: 0)'
        in: query
        name: skip
        type: integer
      - description: 'Number of results to return (default: 20, max: 100)'
        in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Search results with package list
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.APIResponse'
      summary: Search NuGet packages
      tags:
      - NuGet
  /auth/api-keys:
    get:
      description: Get all API keys for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: List of API keys
          schema:
            properties:
              api_keys:
                items:
                  type: object
                type: array
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Failed to list API keys
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: List user's API keys
      tags:
      - Authentication
    post:
      consumes:
      - application/json
      description: Generate a new API key for the authenticated user
      parameters:
      - description: API key creation request
        in: body
        name: api_key
        required: true
        schema:
          properties:
            name:
              type: string
            permissions:
              items:
                type: string
              type: array
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: API key created successfully
          schema:
            properties:
              api_key:
                type: object
              key:
                type: string
            type: object
        "400":
          description: Invalid request body
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Failed to create API key
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new API key
      tags:
      - Authentication
  /auth/api-keys/{id}:
    delete:
      description: Delete an API key for the authenticated user
      parameters:
      - description: API Key ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: API key revoked successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Invalid API key ID
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Failed to revoke API key
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Revoke an API key
      tags:
      - Authentication
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            properties:
              token:
                type: string
              user:
                properties:
                  id:
                    type: string
                type: object
            type: object
        "400":
          description: Invalid request body
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Invalid credentials
          schema:
            properties:
              error:
                type: string
            type: object
      summary: User login
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account in the system
      parameters:
      - description: User registration information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_lgulliver_lodestone_pkg_types.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            properties:
              user:
                properties:
                  email:
                    type: string
                  id:
                    type: string
                  username:
                    type: string
                type: object
            type: object
        "400":
          description: Invalid request body
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Registration failed
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Register a new user
      tags:
      - Authentication
  /npm/{name}:
    get:
      description: Retrieve package metadata including all versions, dist-tags, and
        timing information
      parameters:
      - description: Package name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Package information retrieved successfully
          schema:
            properties:
              dist-tags:
                type: object
              modified:
                type: string
              name:
                type: string
              time:
                type: object
              versions:
                type: object
            type: object
        "400":
          description: Invalid request - package name required
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Package not found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Failed to get package info
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get npm package information
      tags:
      - npm
    put:
      consumes:
      - application/json
      description: Upload a new npm package or new version of an existing package
      parameters:
      - description: Package name
        in: path
        name: name
        required: true
        type: string
      - description: npm package data with _attachments containing base64-encoded
          tarball
        in: body
        name: package
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Package published successfully
          schema:
            properties:
              id:
                type: string
              ok:
                type: boolean
              rev:
                type: string
            type: object
        "400":
          description: Invalid request body or package data
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Upload failed
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Publish npm package
      tags:
      - npm
  /packages/{registry}/{package}/owners:
    get:
      description: Retrieve all owners of a specific package
      parameters:
      - description: Registry type (e.g., npm, nuget, maven)
        in: path
        name: registry
        required: true
        type: string
      - description: Package name
        in: path
        name: package
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Package owners retrieved successfully
          schema:
            properties:
              owners:
                items:
                  type: object
                type: array
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Package not found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Failed to retrieve package owners
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get package owners
      tags:
      - Package Ownership
swagger: "2.0"
